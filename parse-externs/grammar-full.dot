digraph {
<translation-unit> -> <external-declaration>;
<translation-unit> -> <translation-unit>;
<external-declaration> -> <function-definition>;
<external-declaration> -> <declaration>;
<function-definition> -> <declaration-specifiers>;
<function-definition> -> <declarator>;
<function-definition> -> <declaration-list>;
<function-definition> -> <compound-statement>;
<declaration> -> <declaration-specifiers>;
<declaration> -> <init-declarator-list>;
<declaration-list> -> <declaration-list>;
<declaration-list> -> <declaration>;
<declaration-specifiers> -> <declaration-specifiers>;
<declaration-specifiers> -> <storage-class-specifier>;
<declaration-specifiers> -> <type-specifier>;
<declaration-specifiers> -> <type-qualifier>;
<type-specifier> -> <struct-or-union-specifier>;
<type-specifier> -> <enum-specifier>;
<type-specifier> -> <typedef-name>;
<struct-or-union-specifier> -> <struct-or-union>;
<struct-or-union-specifier> -> <struct-declaration-list>;
<struct-declaration-list> -> <struct-declaration-list>;
<struct-declaration-list> -> <struct-declaration>;
<init-declarator-list> -> <init-declarator-list>;
<init-declarator-list> -> <init-declarator>;
<init-declarator> -> <declarator>;
<init-declarator> -> <initializer>;
<struct-declaration> -> <specifier-qualifier-list>;
<struct-declaration> -> <struct-declarator-list>;
<specifier-qualifier-list> -> <specifier-qualifier-list>;
<specifier-qualifier-list> -> <type-specifier>;
<specifier-qualifier-list> -> <type-qualifier>;
<struct-declarator-list> -> <struct-declarator-list>;
<struct-declarator-list> -> <struct-declarator>;
<struct-declarator> -> <declarator>;
<struct-declarator> -> <constant-expression>;
<enum-specifier> -> <enumerator-list>;
<enumerator-list> -> <enumerator>;
<enumerator> -> <constant-expression>;
<declarator> -> <pointer>;
<declarator> -> <direct-declarator>;
<direct-declarator> -> <direct-declarator>;
<direct-declarator> -> <declarator>;
<direct-declarator> -> <constant-expression>;
<direct-declarator> -> <parameter-type-list>;
<direct-declarator> -> <identifier-list>;
<pointer> -> <pointer>;
<pointer> -> <type-qualifier-list>;
<type-qualifier-list> -> <type-qualifier-list>;
<type-qualifier-list> -> <type-qualifier>;
<parameter-type-list> -> <parameter-list>;
<parameter-list> -> <parameter-list>;
<parameter-list> -> <parameter-declaration>;
<parameter-declaration> -> <declaration-specifiers>;
<parameter-declaration> -> <declarator>;
<parameter-declaration> -> <abstract-declarator>;
<identifier-list> -> <identifier-list>;
<initializer> -> <assignment-expression>;
<initializer> -> <initializer-list>;
<initializer-list> -> <initializer-list>;
<initializer-list> -> <initializer>;
<type-name> -> <specifier-qualifier-list>;
<type-name> -> <abstract-declarator>;
<abstract-declarator> -> <pointer>;
<abstract-declarator> -> <direct-abstract-declarator>;
<direct-abstract-declarator> -> <direct-abstract-declarator>;
<direct-abstract-declarator> -> <abstract-declarator>;
<direct-abstract-declarator> -> <constant-expression>;
<direct-abstract-declarator> -> <parameter-type-list>;
<statement> -> <labeled-statement>;
<statement> -> <expression-statement>;
<statement> -> <compount-statement>;
<statement> -> <selection-statement>;
<statement> -> <iteration-statement>;
<statement> -> <jump-statement>;
<labeled-statement> -> <statement>;
<labeled-statement> -> <constant-expression>;
<expression-statement> -> <expression>;
<compound-statement> -> <declaration-list>;
<compound-statement> -> <statement-list>;
<statement-list> -> <statement-list>;
<statement-list> -> <statement>;
<selection-statement> -> <expression>;
<selection-statement> -> <statement>;
<iteration-statement> -> <expression>;
<iteration-statement> -> <statement>;
<jump-statement> -> <expression>;
<expression> -> <expression>;
<expression> -> <assignment-expression>;
<assignment-expression> -> <assignment-expression>;
<assignment-expression> -> <conditional-expression>;
<assignment-expression> -> <unary-expression>;
<conditional-expression> -> <conditional-expression>;
<conditional-expression> -> <logical-OR-expression>;
<conditional-expression> -> <expression>;
<constant-expression> -> <conditional-expression>;
<logical-OR-expression> -> <logical-OR-expression>;
<logical-OR-expression> -> <logical-AND-expression>;
<logical-AND-expression> -> <logical-AND-expression>;
<logical-AND-expression> -> <inclusive-OR-expression>;
<inclusive-OR-expression> -> <inclusive-OR-expression>;
<inclusive-OR-expression> -> <exclusive-OR-expression>;
<exclusive-OR-expression> -> <exclusive-OR-expression>;
<exclusive-OR-expression> -> <AND-expression>;
<AND-expression> -> <AND-expression>;
<AND-expression> -> <equality-expression>;
<equality-expression> -> <equality-expression>;
<equality-expression> -> <relational-expression>;
<relational-expression> -> <relational-expression>;
<relational-expression> -> <shift-expression>;
<shift-expression> -> <shift-expression>;
<shift-expression> -> <additive-expression>;
<additive-expression> -> <additive-expression>;
<additive-expression> -> <multiplicative-expression>;
<multiplicative-expression> -> <multiplicative-expression>;
<multiplicative-expression> -> <cast-expression>;
<cast-expression> -> <cast-expression>;
<cast-expression> -> <unary-expression>;
<cast-expression> -> <type-name>;
<unary-expression> -> <unary-expression>;
<unary-expression> -> <postfix-expression>;
<unary-expression> -> <cast-expression>;
<unary-expression> -> <type-name>;
<postfix-expression> -> <postfix-expression>;
<postfix-expression> -> <primary-expression>;
<postfix-expression> -> <expression>;
<postfix-expression> -> <argument-expression-list>;
<primary-expression> -> <constant>;
<primary-expression> -> <expression>;
<argument-expression-list> -> <argument-expression-list>;
<argument-expression-list> -> <assignment-expression>;
<constant> -> <integer-constant>;
<constant> -> <character-constant>;
<constant> -> <floating-constant>;
<constant> -> <enumeration-constant>;
}
